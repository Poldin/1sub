1sub — MVP Detailed Roadmap v0.4
With Integrated Testing, QA, and Code Review

This roadmap expands the MVP development plan for 1sub — the Unified Subscription Platform — with explicit inclusion of testing, code review, and QA discipline. It assumes a 2-person development team working in 2-week sprints across core phases of the MVP.

Testing & Review Principle:
Each phase ends with 1–2 days dedicated to unit/integration testing, manual QA, and code review. All merges go through peer-reviewed pull requests and are validated on a staging environment before release.

Phase 1 — Auth & Dashboard
Goal: Let users sign up/log in, view a minimal dashboard, and generate tool access tokens.
Deliverables:
• Supabase Auth (email, password, magic link).
• Basic dashboard showing user info and placeholder balance.
• Token minting API and JWT validation.
Testing & Review:
• Unit tests for Auth and JWT payload validation.
• Integration test for dashboard login → launch flow.
• Code review for auth hooks and token utilities.

Phase 2 — Credits System & Ledger
Goal: Implement internal credit mechanics, ledgers, and manual adjustments.
Deliverables:
• credit_balances & credit_transactions tables.
• APIs: grant, consume (idempotent), and get balance.
• Manual top-up button in dashboard.
Testing & Review:
• Unit tests for atomicity & idempotency.
• DB migration and transaction integrity tests.
• Code review for ledger and transaction flow.

Phase 3 — Tool Integrations
Goal: Integrate first 3 tools (n8n, GPT utility, simple API).
Deliverables:
• Tools table with CRUD admin panel.
• /verify-token & /check-user endpoints.
• n8n and GPT tools connected with live credit consumption.
Testing & Review:
• Integration tests for token verification & consumption.
• Code review of security logic, rate limits, and Zod validation.

Phase 4 — Usage Logs & Admin
Goal: Add transparency, observability, and admin control.
Deliverables:
• usage_logs table and UI filters.
• Admin CRUD for tools, users, and credit adjustments.
• Low-balance alert triggers.
Testing & Review:
• UI test for admin actions & audit logs.
• Backend tests for event logging and alerts.
• Code review for query efficiency and role access.

Phase 5 — Vendor Onboarding (Later)
Goal: Enable third-party developers to integrate tools via API keys.
Deliverables:
• API key management & rotation.
• Developer SDK & integration docs.
• Vendor dashboard showing tool usage.
Testing & Review:
• SDK tests for API calls.
• Documentation validation (from-scratch onboarding).
• Security review of API key handling.

Recommended QA & Review Workflow:
• Unit tests with Jest or Vitest (critical coverage 70–80%).
• Integration tests via Postman or Playwright.
• GitHub PR-based peer review for every merge.
• ESLint + TypeScript strict mode in CI.
• Separate Supabase staging project for manual QA.
• Automated smoke tests before each deploy (GitHub Actions).

Sprint Rhythm:
Days 1–9: Build
Days 10–11: Test & fix
Day 12: Code review
Day 13: Deploy to staging & QA
Day 14: Retrospective & next planning.

Timeline Summary:
Phase | Duration | Focus
1 | 2 weeks | Auth, dashboard, token minting
2 | 2 weeks | Credits system + ledger
3 | 2 weeks | Tool integrations
4 | 2 weeks | Logs, admin, alerts
5 | Later | Vendor onboarding SDK
